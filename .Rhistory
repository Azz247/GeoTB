addCircleMarkers(data = coordinates_sf66, popup = popup_content66,
radius = 3, color = c("black"), fillColor = "red", fillOpacity = 1,
weight = 0.8, group = "OPD_2566") %>%
addCircleMarkers(data = coordinates_sfIPD66, popup = popup_contentIPD66,
radius = 3, color = c("black"), fillColor = "blue", fillOpacity = 1,
weight = 0.8, group = "IPD_2566") %>%
hideGroup("IPD_2566") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
secondaryLengthUnit = "kilometers",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
addMiniMap(toggleDisplay = TRUE) %>%
addLayersControl(
baseGroups = c("Open Street Map"),
overlayGroups = c("OPD_2566", "IPD_2566"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet() %>%
setView(lng = 102.825, lat = 16.444, zoom = 5) %>%
addTiles(group = "Open Street Map") %>%
addProviderTiles("Google.Map",group = "Google.Map") %>%
addPolygons(data = KK_contry, label = KK_contry$TA, weight = 0.5, fillOpacity = 0,
group = "KhonKean_subdistrict", color = "black") %>%
addCircleMarkers(data = coordinates_sf66, popup = popup_content66,
radius = 3, color = c("black"), fillColor = "red", fillOpacity = 1,
weight = 0.8, group = "OPD_2566") %>%
addCircleMarkers(data = coordinates_sfIPD66, popup = popup_contentIPD66,
radius = 3, color = c("black"), fillColor = "blue", fillOpacity = 1,
weight = 0.8, group = "IPD_2566") %>%
hideGroup("IPD_2566") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
secondaryLengthUnit = "kilometers",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
addMiniMap(toggleDisplay = TRUE) %>%
addLayersControl(
baseGroups = c("Open Street Map"),
overlayGroups = c("OPD_2566", "IPD_2566"),
options = layersControlOptions(collapsed = FALSE)
)
library(osmdata)
library(mapview)
library(sf)
library(leaflet)
library(shiny)
library(readxl)
library(dplyr)
library(DT)
library(crosstalk)
library(flexdashboard)
setwd("D:/My_Research/Geo_TB")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "#00FF00","#FF0000", "gold", "#FF00F0","#0000FF")
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
htmltools::div(style = "margin: 0.8% ; width: 80%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
leaflet(shared_dataOPD, width = "98%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "green4", "#FF0000", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "green4", "#FF0000", "gold", "#FF00F0","#0000FF")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "green3", "#FF0000", "gold", "#FF00F0","#0000FF")
htmltools::div(style = "margin: 0 auto; width: 96%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group, inline = TRUE))
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "green3", "#FF0000", "gold", "#FF00F0","#0000FF")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "#7AD15F", "#FF0000", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomright')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "green4", "#FF0000", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomright')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "#228B22", "#FF0000", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.6
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomright')
?leaflet
?filter_slider
library(readxl)
CrossTalk_OPD <- read_excel("D:/My_Research/CrossTalk/CrossTalk_OPD.xlsx")
View(CrossTalk_OPD)
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "#FF00F0","#228B22" , "gold","#FF0000" ,"#0000FF")
htmltools::div(style = "margin: 0 auto; width: 95%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.6
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomright')
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
htmltools::div(style = "margin: 0.8% ; width: 100%;",
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group, inline = TRUE))
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan", "#FF00F0","#228B22" , "gold","#FF0000" ,"#0000FF")
