popup60 <- lapply(popup60, HTML)
popup59 <- paste0("<b>ตำบล:</b> ", combine59$ADM3_TH,
"<br><b>อำเภอ:</b> ", combine59$ADM2_TH,
"<br><b>จำนวนผู้ป่วย(คน):</b> ", combine59$count_if,
"<br><b>Population: </b>",  combine59$Total,
"<br><b>CIR: </b>",  combine59$X100000)
popup59 <- lapply(popup59, HTML)
popup58 <- paste0("<b>ตำบล:</b> ", combine58$ADM3_TH,
"<br><b>อำเภอ:</b> ", combine58$ADM2_TH,
"<br><b>จำนวนผู้ป่วย(คน):</b> ", combine58$count_if,
"<br><b>Population: </b>",  combine58$Total,
"<br><b>CIR: </b>",  combine58$X100000)
popup58 <- lapply(popup58, HTML)
popup57 <- paste0("<b>ตำบล:</b> ", combine57$ADM3_TH,
"<br><b>อำเภอ:</b> ", combine57$ADM2_TH,
"<br><b>จำนวนผู้ป่วย(คน):</b> ", combine57$count_if,
"<br><b>Population: </b>",  combine57$Total,
"<br><b>CIR: </b>",  combine57$X100000)
popup57 <- lapply(popup57, HTML)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.5) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = "Year", y = "Count", title = "Total patient each year") +
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;"
plotly::ggplotly(
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.5) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = "Year", y = "Count", title = "Total patients each year") +  # Corrected the title grammar
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.5) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Count", title = "Totol Population each year") +
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Totol Population each year") +
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 800px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Totol Population each year") +
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total patients each year") +  # Corrected the title grammar
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total patients each year") +  # Corrected the title grammar
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = "Year", y = "Number", title = "Total patients each year") +  # Corrected the title grammar
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
geom_text(aes(label = `Total Population`, y = `Total Population`), vjust = -1, hjust = 0.5, size = 3) +
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
geom_text(aes(label = `Total Population`, y = `Total Population`), vjust = -1, hjust = 1, size = 3) +
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
geom_text(aes(label = `Total Population`, y = `Total Population`), vjust = -3, hjust = 3, size = 3) +
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
geom_text(aes(label = `Total Population`), vjust = -1, nudge_y = 10, size = 3) +  # Adjusted text position
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 600px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
geom_text(aes(label = `Total Population`), vjust = -1, hjust = -0.2, nudge_y = 20, size = 3, angle = 45) +  # Adjusted text position and rotation
labs(x = "Year", y = "Number", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(y = "Total population", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total Population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Patient`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "lightgreen", size = 3) +  # Points on the line
labs(x = " ", y = "Total patients", title = "Total patients each year") +  # Corrected the title grammar
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_light() + # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_gray() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_bw() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 525px; margin: 0 auto; text-align: center;",
plotly::ggplotly(
ggplot(Summary, aes(x = Year, y = `Total Population`)) +  # Use backticks for column name with spaces
geom_line(color = "black", size = 0.3) +  # Line graph
geom_point(color = "blue", size = 3) +  # Points on the line
labs(x = " ", y = "Total population", title = "Total mid-year population each year") +
scale_x_continuous(breaks = unique(Summary$Year)) +  # Ensure all years are labeled
theme_minimal() +  # Minimal theme for a cleaner look
theme(legend.position = 'none')
)
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
htmltools::HTML('$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
Where:
- \(n\) is the total number of observations.
htmltools::HTML('$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(n\\) is the total number of observations.</li>
<li>\\(x_i\\) and \\(x_j\\) are the values of the variable of interest at locations \\(i\\) and \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between locations \\(i\\) and \\(j\\).</li>
<li>\\(S_0 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij}\\)</li>
</ul>')
htmltools::HTML('$$I_i = \\frac{(x_i - \\bar{x}) \\sum_{j=1}^{n} w_{ij} (x_j - \\bar{x})}{m_2}$$
<br>
Where:
<ul>
<li>\\(I_i\\) is the Local Moran’s I for observation \\(i\\).</li>
<li>\\(x_i\\) is the value of the variable of interest at location \\(i\\).</li>
<li>\\(x_j\\) is the value of the variable at location \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between location \\(i\\) and location \\(j\\).</li>
<li>\\(m_2 = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}{n}\\), where \\(n\\) is the number of observations.</li>
</ul>')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
htmltools::HTML('$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(n\\) is the total number of observations.</li>
<li>\\(x_i\\) and \\(x_j\\) are the values of the variable of interest at locations \\(i\\) and \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between locations \\(i\\) and \\(j\\).</li>
<li>\\(S_0 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij}\\)</li>
</ul>')
htmltools::HTML('<div style = "font-family: Arial; font size: 16px; ">
$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(n\\) is the total number of observations.</li>
<li>\\(x_i\\) and \\(x_j\\) are the values of the variable of interest at locations \\(i\\) and \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between locations \\(i\\) and \\(j\\).</li>
<li>\\(S_0 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij}\\)</li>
</ul>
</div>')
htmltools::HTML(
'<div style="font-family: Arial; font-size: 18px;">
$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(n\\) is the total number of observations.</li>
<li>\\(x_i\\) and \\(x_j\\) are the values of the variable of interest at locations \\(i\\) and \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between locations \\(i\\) and \\(j\\).</li>
<li>\\(S_0 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij}\\)</li>
</ul>
</div>'
)
htmltools::HTML(
'<div style="font-family: Arial; font-size: 18px;">
$$I_i = \\frac{(x_i - \\bar{x}) \\sum_{j=1}^{n} w_{ij} (x_j - \\bar{x})}{m_2}$$
<br>
Where:
<ul>
<li>\\(I_i\\) is the Local Moran’s I for observation \\(i\\).</li>
<li>\\(x_i\\) is the value of the variable of interest at location \\(i\\).</li>
<li>\\(x_j\\) is the value of the variable at location \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between location \\(i\\) and location \\(j\\).</li>
<li>\\(m_2 = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}{n}\\), where \\(n\\) is the number of observations.</li>
</ul>
</div>')
htmltools::HTML(
'<div style="font-family: Arial; font-size: 18px;">
$$I_i = \\frac{(x_i - \\bar{x}) \\sum_{j=1}^{n} w_{ij} (x_j - \\bar{x})}{m_2}$$
<br>
Where:
<ul>
<li>\\(I_i\\) is the Local Moran’s I for observation \\(i\\).</li>
<li>\\(x_i\\) is the value of the variable of interest at location \\(i\\).</li>
<li>\\(x_j\\) is the value of the variable at location \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between location \\(i\\) and location \\(j\\).</li>
<li>\\(m_2 = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}{n}\\), where \\(n\\) is the number of observations.</li>
</ul>
</div>'
)
htmltools::HTML(
'<div style="font-family: Arial; font-size: 18px;">
$$I_i = \\frac{\\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(I_i\\) is the Local Moran’s I for observation \\(i\\).</li>
<li>\\(x_i\\) is the value of the variable of interest at location \\(i\\).</li>
<li>\\(x_j\\) is the value of the variable at location \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between location \\(i\\) and location \\(j\\).</li>
<li>\\(\\sum_{i=1}^{n} (x_i - \\bar{x})^2\\) is the total sum of squared deviations from the mean.</li>
</ul>
</div>'
)
htmltools::HTML(
'<div style="font-family: Arial; font-size: 18px;">
<br>
$$I = \\frac{n}{S_0} \\cdot \\frac{\\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(n\\) is the total number of observations.</li>
<li>\\(x_i\\) and \\(x_j\\) are the values of the variable of interest at locations \\(i\\) and \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between locations \\(i\\) and \\(j\\).</li>
<li>\\(S_0 = \\sum_{i=1}^{n} \\sum_{j=1}^{n} w_{ij}\\)</li>
<br>
</ul>
</div>'
)
pkgdown::build_site()
devtools::build_readme()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
htmltools::HTML(
'<div style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 18px;">
$$I_i = \\frac{\\sum_{j=1}^{n} w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$
<br>
Where:
<ul>
<li>\\(I_i\\) is the Local Moran’s I for observation \\(i\\).</li>
<li>\\(x_i\\) is the value of the variable of interest at location \\(i\\).</li>
<li>\\(x_j\\) is the value of the variable at location \\(j\\).</li>
<li>\\(\\bar{x}\\) is the mean of the variable of interest.</li>
<li>\\(w_{ij}\\) is the spatial weight between location \\(i\\) and location \\(j\\).</li>
<li>\\(\\sum_{i=1}^{n} (x_i - \\bar{x})^2\\) is the total sum of squared deviations from the mean.</li>
<br>
</ul>
</div>'
)
pkgdown::build_site()
