setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0(
"<div style='background-color:",
custom_colors,
"; padding: 5px;'>",
"<b>Gender:</b> ",
OPD_sf$gender,
"<br><b>Age (years):</b> ",
OPD_sf$age,
"<br><b>Date of service:</b> ",
OPD_sf$date3,
"</div>"
)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#374649FF")
htmltools::div(style = "margin: 0% auto; width: 95%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 1
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft')
paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#374649FF")
popup_contentOPD <- paste0(
"<div style='background-color:",
custom_colors,
"; padding: 5px;'>",
"<b>Gender:</b> ",
OPD_sf$gender,
"<br><b>Age (years):</b> ",
OPD_sf$age,
"<br><b>Date of service:</b> ",
OPD_sf$date3,
"</div>"
)
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 1
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#374649FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 1
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft')
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0(
"<div style='background-color:",
custom_colors,
"; padding: 5px;'>",
"<b>Gender:</b> ",
OPD_sf$gender,
"<br><b>Age (years):</b> ",
OPD_sf$age,
"<br><b>Date of service:</b> ",
OPD_sf$date3,
"</div>"
)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#374649FF")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0(
"<div style='background-color:#1F77B4FF",
"; padding: 5px;'>",
"<b>Gender:</b> ",
OPD_sf$gender,
"<br><b>Age (years):</b> ",
OPD_sf$age,
"<br><b>Date of service:</b> ",
OPD_sf$date3,
"</div>"
)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#1F77B4FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#374649FF")
usethis::use_vignette("SubdistrictCombine")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#374649FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#17BECFFF")
htmltools::div(style = "margin: 0% auto; width: 95%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft')
htmltools::div(
class = "value-box",
style = "border-radius: 5px; padding: 5px; width: 500px;",
plotly::subplot(
plotly::ggplotly(
ggplot(shared_dataOPD, aes(x = Month, fill = year)) +
geom_bar(position = "dodge") +
scale_fill_manual(values = custom_colors) +
labs(x = "Month", y = "Count", title = "Monthly Count of Patients by Year") +
theme(legend.position = 'none')
)
),
htmltools::div(
class = "inner",
htmltools::div(
class = "value-box bg-primary",
style = "margin-top: 1%; width: 99%; border-radius: 5px; padding: 2.5px; font-size: 16px; font-family: 'Arial', sans-serif; color: black; text-align: center;",
"Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')
),
htmltools::div(
class = "value-box bg-primary",
style = "margin-top: 1%; width: 99%; border-radius: 5px; padding: 10px; color: black;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE)
),
htmltools::div(
class = "value-box bg-primary",
style = "margin-top : 1%; width: 99%; border-radius: 5px; padding: 10px; color: black;",
"📌 Description: This data spans from October 2018 to September 2023, plotted on a Geo-Map to visualize the locations of individual patients. Please note that exact patient locations may not be available due to data and searching limitations. Additionally, there is a bar chart showing the monthly count of patients by year to visualize the seasonal pattern of patient counts in this period."
)
)
)
install.packages("GeoTB")
library(GeoTB)
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(devtools)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#374649FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#17BECFFF")
library(rmarkdown)
library(knitr)
library(htmltools)
devtools::install_github("rstudio/bookdown")
library(bookdown)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
htmltools::HTML('<style>
.dashboard {
position: fixed;
left: 0;
top: 50px;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 500px;
height: 500px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
htmltools::HTML('<style>
.dashboard {
position: fixed;
left: 0;
top: 50px;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 600px;
height: 500px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
htmltools::HTML('<style>
.dashboard {
position: fixed;
left: 0;
top: 50px;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 600px;
height: 600px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
library(leaflet)
library(htmltools)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft')
pkgdown::build_site()
('<style>
.dashboard {
left: 0;
top: 0;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 500px;
height: 500px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
htmltools::HTML('<style>
.dashboard {
left: 0;
top: 0;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 500px;
height: 500px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
htmltools::HTML('<style>
.dashboard {
left: 0;
top: 0;
bottom: 0;
right: 0;
}
.dashboard iframe {
width: 800px;
height: 500px;
border: none;
}
</style>
<div class="dashboard">
<iframe src="https://azz247.github.io/GeoTB/root/MapGeo62.html">
</iframe>
</div>')
pkgdown::build_site()
?fig_chunk
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
