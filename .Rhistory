leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_palette,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addControl(
"Date Filter",
date_filterOPD,
position = "topright"
)
custom_palette <- colorRampPalette(brewer.pal(6, "Set1"))(6)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.2
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addControl(
"Date Filter",
date_filterOPD,
position = "topright"
)
custom_palette <- colorRampPalette(brewer.pal(6, "Set1"))(6)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_palette, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.2
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_palette,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_palette, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_palette,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#FF0000", "#00FF00", "cyan", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_palette, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_palette,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"bottomright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info,
Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Address:</b> ", OPD_sf$Address,
"<br><b>Info:</b> ", OPD_sf$info,
"<br><b>Date:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#FF0000", "#00FF00", "cyan", "gold", "#FF00F0","#0000FF")
# control
### control
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addControl(
"Year Filter",
year_filterOPD,
position = "topright"
)
year_filterOPD <- filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addControl(
"Year Filter",
year_filterOPD,
position = "topright"
)
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_slider("date", "Date", shared_dataOPD, ~date3,
width = "100%",
animationOptions = list(interval = 500, loop = TRUE)))
htmltools::div(style = "margin: 0 auto; width: 96%;", filter_slider("date", "Date", shared_dataOPD, ~date3, width = "100%"))
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addControl(
"Year Filter",
year_filterOPD,
position = "topright"
)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1) %>%
addScaleBar('bottomright')
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE),
filter_select("gender", "Gender", shared_dataOPD, ~gender, inline = FALSE),
filter_select("age_group", "Age Group", shared_dataOPD, ~age_group, inline = FALSE)
)
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = FALSE),
filter_checkbox("age_group", "Age Group", shared_dataOPD, ~age_group, inline = FALSE)
)
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)%>%
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = FALSE)
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude,
info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address,
date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year,
gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# Make simple lat,lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date )), date3 = as.Date( date ),  year = as.numeric(year))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
popup_contentOPD <- paste0("<b>Address:</b> ", OPD_sf$Address,
"<br><b>Info:</b> ", OPD_sf$info,
"<br><b>Date:</b> ", OPD_sf$date3)
custom_colors <- c("#FF0000", "#00FF00", "cyan", "gold", "#FF00F0","#0000FF")
custom_palette <- colorRampPalette(brewer.pal(6, "Set1"))(6)
date_filterOPD <- filter_slider("date", "Date", shared_dataOPD, ~date3, width = "100%")
year_filterOPD <- filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
leaflet(shared_dataOPD, width = "100%", height = 800) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
unique_genders <- unique(OPD_sf$gender)
unique_genders <- unique(OPD_sf$gender)
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, selected = unique_genders, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, choices = unique_genders, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, choices = unique_genders, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, choices = unique_genders, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, choices = unique_genders, inline = FALSE)
filter_select("gender", "Gender", shared_dataOPD, ~gender, selected = unique_genders, inline = FALSE)
filter_select("gender", "Gender", shared_dataOPD, ~gender, inline = FALSE)
filter_select("gender", "Gender", shared_dataOPD, ~gender)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender)
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = FALSE)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender)
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
rm(unique_genders)
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
popup_contentOPD <- paste0("<b>Address:</b> ", OPD_sf$Address,
"<br><b>Info:</b> ", OPD_sf$info,
"<br><b>Date:</b> ", OPD_sf$date3)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# Make simple lat,lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude,
info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address,
date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year,
gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date )), date3 = as.Date( date ),  year = as.numeric(year))
shared_dataOPD <- SharedData$new(OPD_sf)
popup_contentOPD <- paste0("<b>Address:</b> ", OPD_sf$Address,
"<br><b>Info:</b> ", OPD_sf$info,
"<br><b>Date:</b> ", OPD_sf$date3)
filter_checkbox("age", "Age Group", shared_dataOPD, ~age_group, inline = TRUE)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20 ปี", "21-40 ปี", "41-60 ปี", "61-80 ปี", "81 ปีขึ้นไป"), include.lowest = TRUE)
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
shared_dataOPD <- SharedData$new(OPD_sf)
filter_checkbox("age", "Age Group", shared_dataOPD, ~age_group, inline = TRUE)
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age(years):</b> ", OPD_sf$age,
"<br><b>Date:</b> ", OPD_sf$date3)
filter_checkbox("age", "Age Group", shared_dataOPD, ~age_group, inline = TRUE)
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20 ปี", "21-40 ปี", "41-60 ปี", "61-80 ปี", "81 ปีขึ้นไป"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age(years):</b> ", OPD_sf$age,
"<br><b>Date:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#FF0000", "#00FF00", "cyan", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addMarkersClustered(
popup = popup_contentOPD,
radius = 3,
clusterOptions = markerClusterOptions()
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
)
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_checkbox("year", "Year", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE), filter_checkbox("age", "Age Group", shared_dataOPD, ~age_group, inline = TRUE))
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, choices = unique_genders, inline = FALSE)
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#FF0000", "#00FF00", "cyan", "gold", "#FF00F0","#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')  %>%
leaflet::addLayersControl(
overlayGroups = c("Markers"),
options = layersControlOptions(collapsed = FALSE),
baseGroups = c("Base Map"),
position = "bottomleft",
overlayCheckbox = TRUE,
groupCheckboxes = TRUE,
groupCheckboxes = list("Filters",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group, inline = TRUE)
)
)
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.8
) %>%
leaflet::addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
leaflet::addScaleBar('bottomright')
htmltools::div(style = "margin: 0 auto; width: 96%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group, inline = TRUE))
htmltools::div(style = "margin: 10% ; width: 96%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year, inline = TRUE),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender, inline = TRUE))
