library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(shiny)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
output$plotted_count_text <- renderText({
paste("Number of Plotted Points: ", nrow(filtered_data()))
})
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
observe({
leafletProxy("map", data = shared_dataOPD) %>%
clearMarkers() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
addMarkers(
lng = mean(shared_dataOPD$lon),
lat = mean(shared_dataOPD$lat),
label = as.character(nrow(shared_dataOPD)),
options = markerOptions(
direction = "bottom",
textOnly = TRUE,
offset = c(0, -15)
)
)
})
leaflet_output("map", width = "100%", height = "500px")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
htmltools::div(style = "margin: 0 auto; width: 95%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
count_markers <- eventReactive(shared_dataOPD, {
leafletProxy("map", data = shared_dataOPD) %>%
clearMarkers() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
addMarkers(
lng = mean(shared_dataOPD$lon),
lat = mean(shared_dataOPD$lat),
label = as.character(nrow(shared_dataOPD)),
options = markerOptions(
direction = "bottom",
textOnly = TRUE,
offset = c(0, -15)
)
)
})
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(shiny)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
leaflet(shared_dataOPD, width = "100%", height = "100%") %>%
addTiles() %>%
addCircleMarkers(
popup = popup_contentOPD,
radius = 3,
color = "black",
fillColor = ~colorFactor(custom_colors, shared_dataOPD$year)(year),
fillOpacity = 1,
weight = 0.5
) %>%
addLegend(
"topright",
title = "Year",
colors = custom_colors,
labels = c("2018", "2019", "2020", "2021", "2022", "2023"),
opacity = 1
) %>%
addScaleBar('bottomleft') %>%
onRender("
function(el, x) {
var count = crosstalk.filterCount(x.data);
Shiny.onInputChange('num_points', count);
}
")
num_points <- reactive({
crosstalk::filterCount(shared_dataOPD)
})
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
renderText({
sprintf("Number of Plotted Points: %d", num_points())
})
renderText({
sprintf("Number of Plotted Points: %d", num_points())
})
renderText({
sprintf("Number of Plotted Points: %d", num_points())
})
renderText({
sprintf("Number of Plotted Points: %d", num_points())
})
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD.xlsx")
# create DataFrame
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, info = CrossTalk_OPD$Info, Address = CrossTalk_OPD$Address, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 20, 40, 60, 80, Inf), labels = c("0-20", "21-40", "41-60", "61-80", "81+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
# create Popup
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("cyan","#458B00" ,"#FF00F0", "#FFA500","#FF0000" ,"#0000FF")
# Create a reactive data frame based on the filters
filtered_data <- reactive({
shared_dataOPD$data %>%
filter(year %in% input$year,
gender %in% input$gender,
age_group %in% input$age_group)
})
?summarywidget
install.packages(summarywidget)
install.packages(summarywidget)
library(summarywidget)
devtools::install_github("kent37/summarywidget")
install.packages("devtools")
library(devtools)
devtools::install_github("kent37/summarywidget")
library(summarywidget)
View(shared_dataOPD)
?summarywidget
div(class="section level3 bg-primary", style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(bza_shared, selection=~`Type of Request`=='Variance'), span(class="caption", "Variances"))))
div(class="section level3 bg-primary", style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`Type of Request`=='Variance'), span(class="caption", "Variances"))))
View(OPD_sf)
div(class="section level3 bg-primary", style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances")
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))
summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))
htmltools::div(class="section level3 bg-primary", style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`info`=='Variance'), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`info`=='Variance',statistic = c("count")), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`date2`=='Variance',statistic = c("count")), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`date2`=='Variance'), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`year`=='Variance'), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`year`=='Variance'))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`year`=='Variance'), span(class="Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD, selection=~`year`=='Variance'), span(class="caption", "Variances"))))
View(shared_dataOPD)
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD,statistic = c("count"), selection=~`year`=='Variance'), span(class="caption", "Variances"))))
htmltools::div(style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD,statistic = 'count', column = 'year'), span(class="caption", "Variances"))))
div(class="section level3 bg-primary", style="flex: 960 960 0px;",
div(class="inner",
p(class="value", summarywidget(shared_dataOPD,statistic = 'count', column = 'year'), span(class="caption", "Variances"))))
div(
class = "section level3 bg-primary",
style = "flex: 960 960 0px;",
div(
class = "inner",
div(
class = "value-box",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Variances")
)
)
)
div(
style = "flex: 960 960 0px;",
div(
class = "inner",
div(
class = "value-box",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Variances")
)
)
)
div(
class = "inner",
div(
class = "value-box bg-primary",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Variances")
)
)
htmltools::div(style = "margin: 0 auto; width: 95%;", filter_slider("date", NULL, shared_dataOPD, ~date3, width = "100%"))
htmltools::div(style = "margin: 0.8% ; width: 7%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Variances")
))
htmltools::div(style = "margin: 0.8% ; width: 7%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Person")
))
htmltools::div(style = "margin: 0.8% ; width: 7%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary","Number of partients"
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
htmltools::div(style = "margin: 0.8% ; width: 7%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year'),
span(class = "caption", "Person")
))
htmltools::div(style = "margin: 0.8% ; width: 7%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
div(
class = "value-box bg-primary",
"Number of patients:",
format(summarywidget(shared_dataOPD, statistic = 'count', column = 'year'), big.mark = ",")
))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
format(summarywidget(shared_dataOPD, statistic = 'count', column = 'year'), big.mark = ",")
))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
format(summarywidget(shared_dataOPD, statistic = 'count', column = 'year'), big.mark = ",")
)))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
format(summarywidget(shared_dataOPD, statistic = 'count', column = 'year'), big.mark = ",")
))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
"Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-#458B00",
" Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-green",
" Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
htmltools::div(style = "margin: 0.8% ; width: 8%;",
filter_checkbox("year", "Year of service", shared_dataOPD, ~year),
filter_checkbox("gender", "Gender", shared_dataOPD, ~gender),
filter_checkbox("age", "Age group(years)", shared_dataOPD, ~age_group),
class = "inner",
div(
class = "value-box bg-primary",
" Number of patients:",
summarywidget(shared_dataOPD, statistic = 'count', column = 'year')))
