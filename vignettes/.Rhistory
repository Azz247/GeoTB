setwd("D:/My_Research/CrossTalk")
library(sf)
library(dplyr)
library(leaflet)
library(crosstalk)
library(lubridate)
library(htmltools)
library(readxl)
library(summarywidget)
library(ggplot2)
library(plotly)
library(sp)
library(dplyr)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD - KK.xlsx")
KK_sf_Mueang <- KK_sf %>% filter(ADM2_EN == "Mueang Khon Kaen")
# Set Polygon
KK_sf <- read_sf("Khon Kaen.shp")
KK_sf_Mueang <- KK_sf %>% filter(ADM2_EN == "Mueang Khon Kaen")
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month)
patients_count <- nrow(OPD_df)
# custom age group
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 4, 14, 24, 44, 64, Inf), labels = c("0-4", "5-14", "15-24", "25-44","45-64", "65+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
# ChangeToDate
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3)
popup <- paste0("<span style='font-family: Arial, sans-serif; font-size:14px;'>", KK_sf_Mueang$ADM3_EN, "</span>")
popupLabel <- lapply(popup, HTML)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#374649FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#17BECFFF")
```
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD - KK.xlsx")
View(CrossTalk_OPD)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD - KK.xlsx")
View(CrossTalk_OPD)
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month, Address = CrossTalk_OPD$Address)
patients_count <- nrow(OPD_df)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 4, 14, 24, 44, 64, Inf), labels = c("0-4", "5-14", "15-24", "25-44","45-64", "65+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
patients_count <- nrow(OPD_df)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 4, 14, 24, 44, 64, Inf), labels = c("0-4", "5-14", "15-24", "25-44","45-64", "65+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
View(OPD_df)
missing_coords <- OPD_df[is.na(OPD_df$lon) | is.na(OPD_df$lat), ]
# View the rows with missing coordinates
print(missing_coords)
View(missing_coords)
# Import Data
CrossTalk_OPD <- read_excel("CrossTalk_OPD - KK.xlsx")
OPD_df <- data.frame(lon = CrossTalk_OPD$Longitude, lat = CrossTalk_OPD$Latitude, date = CrossTalk_OPD$date, year = CrossTalk_OPD$Year, gender = CrossTalk_OPD$Sex, age = CrossTalk_OPD$age_n, Month = CrossTalk_OPD$Month, Address = CrossTalk_OPD$Address)
patients_count <- nrow(OPD_df)
OPD_df$age_group <- cut(OPD_df$age, breaks = c(0, 4, 14, 24, 44, 64, Inf), labels = c("0-4", "5-14", "15-24", "25-44","45-64", "65+"), include.lowest = TRUE)
# Make simple lat, lon
OPD_sf <- st_as_sf(OPD_df, coords = c("lon", "lat"), crs = 4326)
OPD_sf <- OPD_sf %>% dplyr::mutate( date2 = as.numeric( as.Date( date ) ), date3 = as.Date( date ))
OPD_sf <- OPD_sf %>%  dplyr::mutate(year = as.character(year))
# Convert TextMonth to ordered factor
OPD_sf$Month <- factor(OPD_sf$Month, levels = month.abb)
# Share Data
shared_dataOPD <- SharedData$new(OPD_sf)
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3
"<br><b>Address:</b>",)
popup_contentOPD <- paste0("<b>Gender:</b> ", OPD_sf$gender,
"<br><b>Age (years):</b> ", OPD_sf$age,
"<br><b>Date of service:</b> ", OPD_sf$date3,
"<br><b>Address:</b>", OPD_sf$Address)
popup <- paste0("<span style='font-family: Arial, sans-serif; font-size:14px;'>", KK_sf_Mueang$ADM3_EN, "</span>")
popupLabel <- lapply(popup, HTML)
# Define a custom color palette for years 2018 to 2023
custom_colors <- c("#374649FF", "#FF7F0EFF", "#2CA02CFF", "#D62728FF", "#9467BDFF", "#17BECFFF")
